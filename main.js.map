{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex.praktikum/./src/scripts/api.js","webpack://yandex.praktikum/./src/scripts/card.js","webpack://yandex.praktikum/./src/scripts/modal.js","webpack://yandex.praktikum/./src/scripts/validation.js","webpack://yandex.praktikum/./src/scripts/index.js"],"sourcesContent":["const token = '2763cd9f-9006-409d-8ad3-ee41bf99bf04';\r\nconst serverProfileLink = 'https://nomoreparties.co/v1/wff-cohort-15/users/me';\r\nconst serverCardsLink = 'https://nomoreparties.co/v1/wff-cohort-15/cards';\r\nconst serverLikesLink = serverCardsLink + '/likes';\r\nconst serverAvatarLink = serverProfileLink + '/avatar';\r\n\r\nconst headers = {\r\n  authorization: token,\r\n  'Content-Type': 'application/json'\r\n}\r\n\r\nfunction getResponseData(res) {\r\n  if (res.ok) {\r\n    return res.json();\r\n  } else {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n}\r\n\r\nfunction getFromServer(link) {\r\n  return fetch(link, {\r\n    headers: headers,\r\n  })\r\n    .then(res => getResponseData(res))\r\n    .catch(err => {\r\n      console.log('Ошибка загрузки данных с сервера');\r\n      return Promise.reject(`Ошибка: ${err}`);\r\n    })\r\n}\r\n\r\nexport function loadDataFromServerRequest() {\r\n  return Promise.all([getFromServer(serverProfileLink), getFromServer(serverCardsLink)])\r\n}\r\n\r\nexport function updateServerProfile(name, about) {\r\n  return fetch(serverProfileLink, {\r\n    method: 'PATCH',\r\n    headers: headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about\r\n    })\r\n  })\r\n    .then(res => getResponseData(res))\r\n    .catch(err => {\r\n      console.log('Ошибка выгрузки профиля на сервер');\r\n      return Promise.reject(`Ошибка: ${err}`);\r\n    })\r\n}\r\n\r\nexport function uploadCard(cardData) {\r\n  return fetch(serverCardsLink, {\r\n    method: 'POST',\r\n    headers: headers,\r\n    body: JSON.stringify(cardData)\r\n  })\r\n    .then(res => getResponseData(res))\r\n    .then(cardData => cardData._id)\r\n    .catch(err => {\r\n      console.log('Ошибка выгрузки карточки на сервер');\r\n      return Promise.reject(`Ошибка: ${err}`);\r\n    })\r\n}\r\n\r\nexport function deleteCardOnServer(cardId) {\r\n  return fetch(serverCardsLink + '/' + cardId, {\r\n    method: 'DELETE',\r\n    headers: headers\r\n  })\r\n    .then(res => getResponseData(res))\r\n    .catch(err => {\r\n      console.log('Ошибка удаления карточки на сервере');\r\n      return Promise.reject(`Ошибка: ${err}`);\r\n    })\r\n}\r\n\r\nexport function sendLikeToServer(cardId, like) {\r\n  let method;\r\n  if (like) {\r\n    method = 'PUT';\r\n  } else {\r\n    method = 'DELETE';\r\n  }\r\n  \r\n  return fetch(serverLikesLink + '/' + cardId, {\r\n    method: method,\r\n    headers: headers\r\n  })\r\n    .then(res => getResponseData(res))\r\n    .catch(err => {\r\n      console.log('Ошибка отправки лайка на сервер');\r\n      return Promise.reject(`Ошибка: ${err}`);\r\n    })\r\n}\r\n\r\nexport function updateServerAvatar(link) {\r\n  return fetch(serverAvatarLink, {\r\n      method: 'PATCH',\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n    .then(res => getResponseData(res))\r\n    .catch(err => {\r\n      console.log('Ошибка выгрузки аватара на сервер');\r\n      return Promise.reject(`Ошибка: ${err}`);\r\n    })\r\n}\r\n","import { sendLikeToServer } from './api.js';\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\nexport function handleClickLike(evt) {\r\n  const card = evt.target.closest('.card');\r\n  const cardId = card.dataset.imageId\r\n  const oldLikeStatus = evt.target.classList.contains('card__like-button_is-active');\r\n  const cardLikesCounter = card.querySelector('.card__likes_counter');\r\n  \r\n  sendLikeToServer(cardId, !oldLikeStatus)\r\n    .then(cardData => {\r\n      evt.target.classList.toggle('card__like-button_is-active');\r\n      if (cardData.likes) cardLikesCounter.textContent = cardData.likes.length || 0;\r\n    })\r\n}\r\n\r\nexport function createCard(cardData, onDeleteCard, onClickImage, onClickLike, myId) {\r\n  const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardTitle = cardElement.querySelector('.card__title');\r\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n  const cardLikeButton = cardElement.querySelector('.card__like-button');\r\n  const cardLikesCounter = cardElement.querySelector('.card__likes_counter');\r\n\r\n  cardDeleteButton.addEventListener('click', onDeleteCard);\r\n  cardLikeButton.addEventListener('click', onClickLike);\r\n  cardImage.addEventListener('click', () => onClickImage(cardData.link, cardData.name));\r\n\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardTitle.textContent = cardData.name;\r\n\r\n  cardElement.dataset.imageId = cardData._id || 0;\r\n  \r\n  if (cardData.likes) {\r\n    cardLikesCounter.textContent = cardData.likes.length || 0;\r\n    if (cardData.likes.some(like => like._id === myId)) {\r\n      cardLikeButton.classList.add('card__like-button_is-active');\r\n    }\r\n  } else {\r\n    cardLikesCounter.textContent = 0;\r\n  }\r\n  \r\n  if (cardData.owner) {\r\n    if (cardData.owner._id !== myId) cardDeleteButton.remove();\r\n  } else {\r\n    cardDeleteButton.remove();\r\n  }\r\n\r\n  return cardElement;\r\n}\r\n","export function showPopup(popup) {\r\n  document.addEventListener('keydown', handleClosePopupByEscape);\r\n  popup.classList.add('popup_is-opened');\r\n}\r\n\r\nexport function hidePopup(popup) {\r\n  document.removeEventListener('keydown', handleClosePopupByEscape);\r\n  popup.classList.remove('popup_is-opened');\r\n}\r\n\r\nexport function enablePopupAnimation(popup) {\r\n  popup.classList.add('popup_is-animated');\r\n}\r\n\r\nfunction handleClosePopupByEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    hidePopup(popup);\r\n  }\r\n}\r\n\r\nexport function handleClosePopupByClickOverlay(evt) {\r\n  const popup = evt.target;\r\n  if (evt.target.classList.contains('popup_is-opened')) hidePopup(popup);\r\n}\r\n","const customValidityMessage = 'Разрешены только латинские, кириллические буквы, знаки дефиса и пробелы';\r\nlet formSelector, inputSelector, submitButtonSelector, inactiveButtonClass, inputErrorClass, errorClass;\r\n\r\nfunction setValidationSettings(validationSettings) {\r\n  formSelector = validationSettings.formSelector;\r\n  inputSelector = validationSettings.inputSelector;\r\n  submitButtonSelector = validationSettings.submitButtonSelector;\r\n  inactiveButtonClass = validationSettings.inactiveButtonClass;\r\n  inputErrorClass = validationSettings.inputErrorClass;\r\n  errorClass = validationSettings.errorClass;\r\n}\r\n\r\nfunction showInputError(formElement, inputElement, errorMessage) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(errorClass);\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.name}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(errorClass);\r\n}\r\n\r\nfunction isValid(formElement, inputElement, forceValid = false) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(customValidityMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  }\r\n  if (inputElement.validity.valid || forceValid) {\r\n    hideInputError(formElement, inputElement);\r\n  } else {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage);\r\n  }\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\nfunction preventDefault(evt) {\r\n  evt.preventDefault();\r\n}\r\n\r\nfunction disableButton(buttonElement) {\r\n  buttonElement.addEventListener('click', preventDefault)\r\n  buttonElement.classList.add(inactiveButtonClass);\r\n}\r\n\r\nfunction enableButton(buttonElement) {\r\n  buttonElement.removeEventListener('click', preventDefault)\r\n  buttonElement.classList.remove(inactiveButtonClass);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement) {\r\n  if (hasInvalidInput(inputList)) {\r\n    disableButton(buttonElement);\r\n  } else {\r\n    enableButton(buttonElement);\r\n  }\r\n}\r\n\r\nexport function refreshValidState(formElement, validationSettings, forceValid = false) {\r\n  setValidationSettings(validationSettings);\r\n\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement);\r\n  inputList.forEach((inputElement) => {\r\n    isValid(formElement, inputElement, forceValid);\r\n  });\r\n}\r\n\r\nfunction setEventListeners(formElement, validationSettings) {\r\n  const inputList = Array.from(formElement.querySelectorAll(inputSelector));\r\n  const buttonElement = formElement.querySelector(submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      isValid(formElement, inputElement);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n  buttonElement.addEventListener('click', (evt) => {\r\n    refreshValidState(formElement, validationSettings);\r\n  })\r\n}\r\n\r\nexport function enableValidation(validationSettings) {\r\n  setValidationSettings(validationSettings);\r\n\r\n  const formList = Array.from(document.querySelectorAll(formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationSettings);\r\n  });\r\n}\r\n","import '../pages/index.css';\r\n\r\nimport { createCard, handleClickLike } from './card.js';\r\nimport { showPopup, hidePopup, enablePopupAnimation, handleClosePopupByClickOverlay } from './modal.js';\r\nimport { enableValidation, refreshValidState } from './validation.js';\r\nimport { loadDataFromServerRequest, updateServerProfile, uploadCard, deleteCardOnServer, updateServerAvatar } from './api.js';\r\n\r\nconst popupProfile = document.querySelector('.popup_type_edit');\r\nconst popupNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupImage = document.querySelector('.popup_type_image');\r\nconst popupConfirmation = document.querySelector('.popup_type_confirmation');\r\nconst popupAvatar = document.querySelector('.popup_type_avatar');\r\n\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst popupImageImg = document.querySelector('.popup__image');\r\nconst popupImageCaption = document.querySelector('.popup__caption');\r\nconst cardsList = document.querySelector('.places__list');\r\nconst buttonNewCard = document.querySelector('.profile__add-button');\r\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\r\nconst avatar = document.querySelector('.profile__image');\r\n\r\nconst popupProfileForm = popupProfile.querySelector('.popup__form');\r\nconst popupNewCardForm = popupNewCard.querySelector('.popup__form');\r\nconst popupAvatarForm = popupAvatar.querySelector('.popup__form');\r\nconst popupConfirmationForm = popupConfirmation.querySelector('.popup__form');\r\n\r\nconst inputCardName = popupNewCard.querySelector('input[name=\"place-name\"]');\r\nconst inputCardLink = popupNewCard.querySelector('input[name=\"link\"]');\r\nconst inputProfileName = popupProfile.querySelector('input[name=\"name\"]');\r\nconst inputProfileDescription = popupProfile.querySelector('input[name=\"description\"]');\r\nconst inputAvatarLink = popupAvatar.querySelector('input[name=\"avatar-link\"]');\r\n\r\nconst popupProfileCloseButton = popupProfile.querySelector('.popup__close');\r\nconst popupNewCardCloseButton = popupNewCard.querySelector('.popup__close');\r\nconst popupImageCloseButton = popupImage.querySelector('.popup__close');\r\nconst popupConfirmationCloseButton = popupConfirmation.querySelector('.popup__close');\r\nconst popupAvatarCloseButton = popupAvatar.querySelector('.popup__close');\r\n\r\nconst popupProfileSubmitButton = popupProfile.querySelector('.popup__button');\r\nconst popupNewCardSubmitButton = popupNewCard.querySelector('.popup__button');\r\nconst popupAvatarSubmitButton = popupAvatar.querySelector('.popup__button');\r\n\r\nconst validationSettings = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n}\r\n\r\n\r\nlet cardForDelete;\r\nlet myId = 0;\r\n\r\nfunction setPendingText(submitButton, state, timeout = 600) {\r\n  if (state) {\r\n    submitButton.textContent = 'Сохранение\\u2026';\r\n  } else {\r\n    setTimeout(() => {\r\n      submitButton.textContent = 'Сохранить';\r\n    }, timeout);\r\n  }\r\n}\r\n\r\nfunction loadInfoFromProfile() {\r\n  inputProfileName.value = profileName.textContent;\r\n  inputProfileDescription.value = profileDescription.textContent;\r\n}\r\n\r\nfunction saveInfoToProfile(data, about) {\r\n  profileName.textContent = data;\r\n  profileDescription.textContent = about;\r\n}\r\n\r\nfunction loadInfoFromAvatar() {\r\n  inputAvatarLink.value = avatar.style.backgroundImage.slice(5,-2);\r\n}\r\n\r\nfunction saveInfoToAvatar(link) {\r\n  avatar.style.backgroundImage = 'url(\"' + link + '\")';\r\n}\r\n\r\nfunction clearCardInfo() {\r\n  inputCardName.value = '';\r\n  inputCardLink.value = '';\r\n}\r\n\r\nfunction setPopupImageInfo(link, name) {\r\n  popupImageImg.src = link;\r\n  popupImageImg.alt = name;\r\n  popupImageCaption.textContent = name;\r\n}\r\n\r\nfunction handleClickImage(link, name) {\r\n  setPopupImageInfo(link, name);\r\n  showPopup(popupImage);\r\n}\r\n\r\nfunction handleDeleteCard(evt) {\r\n  cardForDelete = evt.target.closest('.card');\r\n  showPopup(popupConfirmation);\r\n}\r\n\r\nfunction addCard(cardData, prepend = false) {\r\n  const newCard = createCard(cardData, handleDeleteCard, handleClickImage, handleClickLike, myId);\r\n  if (prepend) {\r\n    cardsList.prepend(newCard);\r\n  } else {\r\n    cardsList.append(newCard);\r\n  }\r\n}\r\n\r\nfunction addCardsSet(cardsSet) {\r\n  cardsSet.forEach(cardData => {\r\n    addCard(cardData);\r\n  });\r\n}\r\n\r\nfunction addCardFromPopup() {\r\n  const cardData = {};\r\n  cardData.name = inputCardName.value;\r\n  cardData.link = inputCardLink.value;\r\n  cardData.owner = { _id: myId };\r\n  \r\n  return uploadCard(cardData)\r\n    .then(res => {\r\n      cardData._id = res;\r\n      addCard(cardData, true);\r\n    })\r\n}\r\n\r\n////// NewCard Popup\r\n\r\nfunction handleOpenPopupNewCard() {\r\n  clearCardInfo();\r\n  refreshValidState(popupNewCardForm, validationSettings, true);\r\n  showPopup(popupNewCard);\r\n}\r\n\r\nfunction handleSubmitPopupNewCard(evt) {\r\n  evt.preventDefault();\r\n  setPendingText(popupNewCardSubmitButton, true);\r\n  addCardFromPopup()\r\n    .then(() => {\r\n      hidePopup(popupNewCard);\r\n      setPendingText(popupNewCardSubmitButton, false);\r\n    })\r\n    .catch(() => {\r\n      setPendingText(popupNewCardSubmitButton, false, 0);\r\n    })\r\n}\r\n\r\nfunction handleClosePopupByClickButton(evt) {\r\n  const popup = evt.target.closest('.popup');\r\n  hidePopup(popup);\r\n}\r\n\r\nfunction enablePopupNewCard() {\r\n  buttonNewCard.addEventListener('click', handleOpenPopupNewCard);\r\n  popupNewCardForm.addEventListener('submit', handleSubmitPopupNewCard);\r\n  popupNewCardCloseButton.addEventListener('click', handleClosePopupByClickButton);\r\n  popupNewCard.addEventListener('mousedown', handleClosePopupByClickOverlay);\r\n}\r\n\r\n////// Profile Popup\r\n\r\nfunction handleOpenPopupProfile() {\r\n  loadInfoFromProfile();\r\n  refreshValidState(popupProfileForm, validationSettings);\r\n  showPopup(popupProfile);\r\n}\r\n\r\nfunction handleSubmitPopupProfile(evt) {\r\n  evt.preventDefault();\r\n  setPendingText(popupProfileSubmitButton, true);\r\n  updateServerProfile(inputProfileName.value, inputProfileDescription.value)\r\n    .then(data => {\r\n      saveInfoToProfile(data.name, data.about);\r\n      hidePopup(popupProfile);\r\n      setPendingText(popupProfileSubmitButton, false);\r\n    })\r\n    .catch(() => {\r\n      setPendingText(popupProfileSubmitButton, false, 0);\r\n    })\r\n}\r\n\r\nfunction enablePopupProfile() {\r\n  buttonEditProfile.addEventListener('click', handleOpenPopupProfile);\r\n  popupProfileForm.addEventListener('submit', handleSubmitPopupProfile);\r\n  popupProfileCloseButton.addEventListener('click', handleClosePopupByClickButton);\r\n  popupProfile.addEventListener('mousedown', handleClosePopupByClickOverlay);\r\n}\r\n\r\n////// Image Popup\r\n\r\nfunction enablePopupImage() {\r\n  popupImageCloseButton.addEventListener('click', handleClosePopupByClickButton);\r\n  popupImageImg.addEventListener('click', handleClosePopupByClickButton);\r\n  popupImage.addEventListener('mousedown', handleClosePopupByClickOverlay);\r\n}\r\n\r\n////// Avatar Popup\r\n\r\nfunction handleOpenPopupAvatar() {\r\n  loadInfoFromAvatar();\r\n  refreshValidState(popupAvatarForm, validationSettings);\r\n  showPopup(popupAvatar);\r\n}\r\n\r\nfunction handleSubmitPopupAvatar(evt) {\r\n  evt.preventDefault();\r\n  setPendingText(popupAvatarSubmitButton, true);\r\n  updateServerAvatar(inputAvatarLink.value)\r\n    .then(data => {\r\n      saveInfoToAvatar(data.avatar);\r\n      hidePopup(popupAvatar);\r\n      setPendingText(popupAvatarSubmitButton, false);\r\n    })\r\n    .catch(() => {\r\n      setPendingText(popupAvatarSubmitButton, false, 0);\r\n    })\r\n}\r\n\r\nfunction enablePopupAvatar() {\r\n  avatar.addEventListener('click', handleOpenPopupAvatar);\r\n  popupAvatarForm.addEventListener('submit', handleSubmitPopupAvatar);\r\n  popupAvatarCloseButton.addEventListener('click', handleClosePopupByClickButton);\r\n  popupAvatar.addEventListener('mousedown', handleClosePopupByClickOverlay);\r\n}\r\n\r\n////// Confirmation Popup\r\n\r\nfunction handleSubmitPopupConfirmation(evt) {\r\n  const cardId = cardForDelete.dataset.imageId;\r\n  evt.preventDefault();\r\n  deleteCardOnServer(cardId)\r\n    .then(() => {\r\n      cardForDelete.remove();\r\n      hidePopup(popupConfirmation);\r\n    })\r\n}\r\n\r\nfunction enablePopupConfirmation() {\r\n  popupConfirmationForm.addEventListener('submit', handleSubmitPopupConfirmation);\r\n  popupConfirmationCloseButton.addEventListener('click', handleClosePopupByClickButton);\r\n  popupConfirmation.addEventListener('mousedown', handleClosePopupByClickOverlay);\r\n}\r\n\r\n////// Server interaction\r\n\r\nfunction setLocalProfile(data) {\r\n  profileName.textContent = data.name;\r\n  profileDescription.textContent = data.about;\r\n  avatar.style.backgroundImage = 'url(\"' + data.avatar + '\")';\r\n  myId = data._id;\r\n}\r\n\r\nfunction wipeLocalCards() {\r\n  document.querySelectorAll('.card').forEach(card => {\r\n    card.remove();\r\n  });\r\n}\r\n\r\nfunction loadDataFromServer() {\r\n  wipeLocalCards();\r\n  loadDataFromServerRequest()\r\n    .then(data => {\r\n      setLocalProfile(data[0]);\r\n      addCardsSet(data[1]);\r\n    })\r\n    .catch(() => {\r\n      console.log('Ошибка загрузки данных с сервера');\r\n    })\r\n}\r\n\r\n\r\ndocument.querySelectorAll('.popup').forEach(popup => enablePopupAnimation(popup));\r\n\r\nenablePopupNewCard();\r\nenablePopupProfile();\r\nenablePopupImage();\r\nenablePopupAvatar();\r\nenablePopupConfirmation();\r\n\r\nenableValidation(validationSettings);\r\n\r\nloadDataFromServer();\r\n"],"names":["serverProfileLink","serverCardsLink","serverLikesLink","serverAvatarLink","headers","authorization","getResponseData","res","ok","json","Promise","reject","status","getFromServer","link","fetch","then","catch","err","console","log","cardTemplate","document","querySelector","content","handleClickLike","evt","card","target","closest","cardId","dataset","imageId","oldLikeStatus","classList","contains","cardLikesCounter","like","method","sendLikeToServer","cardData","toggle","likes","textContent","length","showPopup","popup","addEventListener","handleClosePopupByEscape","add","hidePopup","removeEventListener","remove","key","handleClosePopupByClickOverlay","customValidityMessage","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","setValidationSettings","validationSettings","isValid","formElement","inputElement","forceValid","validity","patternMismatch","setCustomValidity","valid","errorElement","name","hideInputError","errorMessage","showInputError","validationMessage","preventDefault","toggleButtonState","inputList","buttonElement","some","hasInvalidInput","enableButton","disableButton","refreshValidState","Array","from","querySelectorAll","forEach","popupProfile","popupNewCard","popupImage","popupConfirmation","popupAvatar","profileName","profileDescription","popupImageImg","popupImageCaption","cardsList","buttonNewCard","buttonEditProfile","avatar","popupProfileForm","popupNewCardForm","popupAvatarForm","popupConfirmationForm","inputCardName","inputCardLink","inputProfileName","inputProfileDescription","inputAvatarLink","popupProfileCloseButton","popupNewCardCloseButton","popupImageCloseButton","popupConfirmationCloseButton","popupAvatarCloseButton","popupProfileSubmitButton","popupNewCardSubmitButton","popupAvatarSubmitButton","cardForDelete","myId","setPendingText","submitButton","state","timeout","setTimeout","handleClickImage","src","alt","setPopupImageInfo","handleDeleteCard","addCard","prepend","newCard","onDeleteCard","onClickImage","onClickLike","cardElement","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","_id","owner","createCard","append","handleClosePopupByClickButton","enablePopupAnimation","value","body","JSON","stringify","uploadCard","addCardFromPopup","about","data","saveInfoToProfile","style","backgroundImage","slice","saveInfoToAvatar","deleteCardOnServer","setEventListeners","enableValidation","all","setLocalProfile"],"sourceRoot":""}